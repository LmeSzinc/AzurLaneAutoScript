from dev_tools.utils import LuaLoader


class ShipEXP:
    def __init__(self):
        self.ship_exp = [0] * 125  # Initialize a list for levels 0 to 125
        data = LOADER.load('sharecfg/ship_level.lua')
        total_exp = 0
        for index, exp in data.items():
            if not isinstance(index, int) or index >= 124:
                continue
            total_exp += exp['exp']
            self.ship_exp[exp['level']] = total_exp
    
    def encode(self):
        lines = []
        lines.append('# This file is auto-generated by dev_tools/ship_exp_extract.py.')
        lines.append('# Do not edit this file manually.')
        lines.append('')
        lines.append('LIST_SHIP_EXP = [')
        for exp in self.ship_exp:
            lines.append(f'    {exp},')
        lines.append(']')
        return lines
    
    def write(self, file):
        print(f'writing {file}')
        with open(file, 'w', encoding='utf-8') as f:
            for text in self.encode():
                f.write(text + '\n')
        

"""
This is an auto-tool to extract accumulative ship leveling exp for operation siren leveling check.

Git clone https://github.com/AzurLaneTools/AzurLaneLuaScripts, to get the decrypted scripts.
Arguments:
    FILE:  Path to repository, such as 'xxx/AzurLaneLuaScripts'
    SAVE:  File to save, 'module/os/ship_exp.py'
"""
FOLDER = '../AzurLaneLuaScripts/'
SAVE = 'module/os/ship_exp_data.py'

LOADER = LuaLoader(FOLDER)
ShipEXP().write(SAVE)